name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  merge_group:
  schedule:
    # https://crontab.guru/#24_08_*_*_*
    - cron: 24 08 * * *

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  # detect whether any code changes are included in this PR
  changes:
    runs-on: ubuntu-latest
    permissions:
      # necessary for actions/checkout to read private repo
      contents: read
      # necessary for dorny/paths-filter to detect changes
      # https://github.com/dorny/paths-filter#supported-workflows
      pull-requests: read
    outputs:
      code: ${{ steps.filter.outputs.code }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        # dorny/paths-filter needs git clone for non-PR events
        # https://github.com/dorny/paths-filter#supported-workflows
        if: github.event_name != 'pull_request'

      - name: Filter Changes
        uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            code:
              - 'anaconda_conda_tos/**'
              - 'tests/**'
              - '*.py'
              - 'recipe/**'
              - '.github/workflows/tests.yml'

  # test suite
  tests:
    # only run test suite if there are code changes
    needs: changes
    if: github.event_name == 'schedule' || needs.changes.outputs.code == 'true'

    defaults:
      run:
        # https://github.com/conda-incubator/setup-miniconda#use-a-default-shell
        shell: bash -el {0}  # bash exit immediately on error + login shell
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Windows: only test lowest and highest Python versions
          - os: windows-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.11'
          # macOS x86_64: only test lowest Python version
          - os: macos-13
            python-version: '3.9'
          - os: macos-13
            python-version: '3.10'
          - os: macos-13
            python-version: '3.11'
          - os: macos-13
            python-version: '3.12'
          # macOS arm64: only test highest Python version
          - os: macos-14
            python-version: '3.8'
          - os: macos-14
            python-version: '3.9'
          - os: macos-14
            python-version: '3.10'
          - os: macos-14
            python-version: '3.11'
    runs-on: ${{ matrix.os }}
    env:
      ErrorActionPreference: Stop  # powershell exit immediately on error

    steps:
      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Hash + Timestamp
        run: echo "HASH=${{ runner.os }}-${{ runner.arch }}-Py${{ matrix.python-version }}-$(date -u "+%Y%m")" >> $GITHUB_ENV

      - name: Cache Conda
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a # v4.1.2
        with:
          path: ~/conda_pkgs_dir
          key: cache-${{ env.HASH }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@a4260408e20b96e80095f42ff7f1a15b27dd94ca # v3.0.4
        with:
          run-post: false  # skip post cleanup
          # conda not preinstalled in arm64 runners
          miniconda-version: ${{ runner.arch == 'ARM64' && 'latest' || null }}
          architecture: ${{ runner.arch }}

      - name: Conda Install
        run: >
          conda install
          --yes
          --file tests/requirements.txt
          --file tests/requirements-ci.txt
          python=${{ matrix.python-version }}

      # TODO: how can we remove this step?
      - name: Install Self
        run: pip install -e .

      - name: Conda Info
        # view test env info (not base)
        run: python -m conda info --verbose

      - name: Conda Config
        run: conda config --show-sources

      - name: Conda List
        run: conda list --show-channel-urls

      - name: Run Tests
        # Windows is sensitive to long paths, using `--basetemp=${{ runner.temp }} to
        # keep the test directories shorter
        run: >
          pytest
          --cov=anaconda_conda_tos
          --basetemp=${{ runner.temp }}
          -n auto

  # required check
  analyze:
    needs: [tests]
    if: '!cancelled()'

    runs-on: ubuntu-latest
    steps:
      - name: Determine Success
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        id: alls-green
        with:
          # permit jobs to be skipped if there are no code changes (see changes job)
          allowed-skips: ${{ toJSON(needs) }}
          jobs: ${{ toJSON(needs) }}

      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        # source code is needed to report failures
        if: always() && github.event_name != 'pull_request' && steps.alls-green.outputs.result == 'failure'

      - name: Report Failures
        if: always() && github.event_name != 'pull_request' && steps.alls-green.outputs.result == 'failure'
        uses: JasonEtco/create-an-issue@1b14a70e4d8dc185e5cc76d3bec9eab20257b2c5 # v2.9.2
        env:
          GITHUB_TOKEN: ${{ secrets.AUTO_REPORT_TEST_FAILURE }}
          RUN_ID: ${{ github.run_id }}
          TITLE: Tests failed
        with:
          filename: .github/TEST_FAILURE_REPORT_TEMPLATE.md
          update_existing: false
